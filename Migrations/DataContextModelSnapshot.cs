// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using facerecognitionapi.Data;

namespace faceRecognitionAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClassStudents", b =>
                {
                    b.Property<int>("classesid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("studentsid")
                        .HasColumnType("INTEGER");

                    b.HasKey("classesid", "studentsid");

                    b.HasIndex("studentsid");

                    b.ToTable("ClassStudents");
                });

            modelBuilder.Entity("faceRecognitionAPI.Models.Photo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isMain")
                        .HasColumnType("INTEGER");

                    b.Property<string>("publicId")
                        .HasColumnType("TEXT");

                    b.Property<int>("studentsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("studentsId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("faceRecognitionAPI.Models.StudentAttendance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("attended")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("scheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("studentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("scheduleId");

                    b.HasIndex("studentsId");

                    b.ToTable("studentAttendances");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Class", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("courseCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("courseName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("classId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("staffId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("classId");

                    b.ToTable("schedules");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Staff", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("role")
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("staffs");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Students", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("advisorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<bool>("confirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("studentNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("advisorId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("ClassStudents", b =>
                {
                    b.HasOne("facerecognitionapi.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("classesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("facerecognitionapi.Models.Students", null)
                        .WithMany()
                        .HasForeignKey("studentsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("faceRecognitionAPI.Models.Photo", b =>
                {
                    b.HasOne("facerecognitionapi.Models.Students", "students")
                        .WithMany("photos")
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("students");
                });

            modelBuilder.Entity("faceRecognitionAPI.Models.StudentAttendance", b =>
                {
                    b.HasOne("facerecognitionapi.Models.Schedule", "schedule")
                        .WithMany("attendance")
                        .HasForeignKey("scheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("facerecognitionapi.Models.Students", "students")
                        .WithMany("attendance")
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("schedule");

                    b.Navigation("students");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Schedule", b =>
                {
                    b.HasOne("facerecognitionapi.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("classId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Students", b =>
                {
                    b.HasOne("facerecognitionapi.Models.Staff", "advisor")
                        .WithMany("students")
                        .HasForeignKey("advisorId");

                    b.Navigation("advisor");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Schedule", b =>
                {
                    b.Navigation("attendance");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Staff", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("facerecognitionapi.Models.Students", b =>
                {
                    b.Navigation("attendance");

                    b.Navigation("photos");
                });
#pragma warning restore 612, 618
        }
    }
}
